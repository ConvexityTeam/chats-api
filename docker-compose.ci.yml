version: "3.9"

services:
  rabbitmq:
    # image: "rabbitmq:3.8.14-alpine"
    cache_from:
      - "${RABBITMQ_IMAGE}"
    image: "${RABBITMQ_IMAGE}"
    container_name: rabbitmq
    networks:
      - rabbitmq
    restart: unless-stopped

  postgres:
    # image: postgres:11-alpine
    image: "${POSTGRES_IMAGE}"
    container_name: postgres
    networks:
      - postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_DB=convexity
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped

  backend:
    depends_on:
      - postgres
      - rabbitmq
    image: "${BACKEND_IMAGE}"
    container_name: backend

    build:
      context: convexity-backend
      dockerfile: Dockerfile
    volumes: 
    - ./convexity-backend/:/app
    ports: 
      - "${PORT}:${PORT}"
    networks:
      - gateway
      - postgres
      - rabbitmq
    restart: unless-stopped
    command: npm start
    # security_opt:
      # - no-new-privileges:true

  consumer:
    depends_on:
      - postgres
      - rabbitmq
      - backend
    image: "${CONSUMER_IMAGE}"
    container_name: consumer
    build:
      context: consumer
      dockerfile: Dockerfile
    networks:
      - gateway
      - postgres
      - rabbitmq
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

networks:
  gateway:
    driver: bridge
    name: gateway
  rabbitmq:
    internal: true
  postgres:
    internal: true

volumes:
  postgres:
    external: true